---
services:
  rails:
    build:
      context: .
      dockerfile: docker/rails/Dockerfile
    init: true
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: >
      bash -c "
        rm -rf tmp/pids/server.pid &&
        rails s -b 0.0.0.0 -p 3000
      "
    ports:
      - target: 3000
        published: 3000
    volumes:
      - type: bind
        source: .
        target: /app
      - type: volume
        source: rails_bundle
        target: /usr/local/bundle
      - type: volume
        source: rails_log
        target: /app/log
      - type: volume
        source: rails_cache
        target: /app/tmp/cache
    environment:
      DB_HOST: db
      FILE_AWS_S3_BUCKET: file
      FILE_AWS_S3_ENDPOINT: http://minio.${HOST_IP}.nip.io:9000
      FILE_AWS_ACCESS_KEY_ID: user
      FILE_AWS_SECRET_ACCESS_KEY: password
      HOST_IP: ${HOST_IP}

  db:
    image: mysql:8
    volumes:
      - type: volume
        source: mysql_data
        target: /var/lib/mysql
    ports:
      - target: 3306
        published: 3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 1s
      timeout: 20s
      retries: 20

  minio:
    image: minio/minio:RELEASE.2023-07-11T21-29-34Z
    ports:
      - target: 9000
        published: 9000
      - target: 9001
        published: 9001
    command: minio server /data --console-address ':9001'
    environment:
      MINIO_DOMAIN: minio.${HOST_IP}.nip.io
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: password
    volumes:
      - type: volume
        source: minio
        target: /data
    networks:
      default:
        aliases:
          - minio.${HOST_IP}.nip.io
          - file.minio.${HOST_IP}.nip.io
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 1s
      timeout: 20s
      retries: 20

  mc:
    image: minio/mc:RELEASE.2023-07-11T23-30-44Z
    profiles:
      - tools
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - type: volume
        source: mc
        target: /root/.mc
      - type: bind
        source: ./docker/mc/config.json
        target: /root/.mc/config.json

volumes:
  mysql_data:
  rails_bundle:
  rails_cache:
  rails_log:
  minio:
  mc:
